apiVersion: apps/v1
kind: Deployment
metadata: # metadata about the Deployment
  name: rms-deployment
spec: # defines the desired state of the Deployment.
  replicas: 2 # specifies how many identical replicas (pods) of the application should be maintained, in this case, 2, which means Kubernetes will ensure that two pods running the specified container are always available
  selector:
    matchLabels:
      app: rms-docker-img
  template: # defines the pod template used by the Deployment. It specifies the pod's metadata and the container(s) to run.
    metadata: #specifies the pod's metadata
      labels:
        app: rms-docker-img
    spec: # specifies the container(s) to run
      containers:
      - name: rms-container
        image: oceantp/dvops-project-dcf:latest
        ports:
        - containerPort: 3000 # specifies the port that the application listens on
        env:
        - name: PORT
          value: "5050"
        - name: DEBUG
          value: "true"
        - name: NODE_ENV
          value: "development"
        - name: POSTGRES_PASSWORD
          value: "QTadFsylIQlo"
        - name: POSTGRES_CONNECTION_URL
          value: "postgres://postgres:QTadFsylIQlo@rmsaksclus-devopsgroup-1b61aa-je5hk0rh.hcp.centralus.azmk8s.io:5432/postgres"
        - name: JWT_SECRET
          value: "yO6txk2UBKuclKQZ"

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: rms-deployment
# spec:
#   replicas: 2  # Specifies how many identical replicas (pods) should be maintained
#   selector:
#     matchLabels:
#       app: rms-docker-img
#   template:
#     metadata:
#       labels:
#         app: rms-docker-img
#     spec:
#       containers:
#       - name: rms-container
#         image: oceantp/dvops-project-dcf:latest
#         ports:
#         - containerPort: 5050  # Port that the application listens on
