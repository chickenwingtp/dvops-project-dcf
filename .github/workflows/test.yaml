name: Test Frontend and Backend

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      PORT: 3000
      DEBUG: true
      NODE_ENV: "development"
      POSTGRES_CONNECTION_URL: "postgresql://postgres:testing123@localhost:5432/postgres"
      POSTGRES_PASSWORD: "testing123"
      JWT_SECRET: "test456"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev @types/express-status-monitor
        
      - name: Build backend
        run: |
          npm run build || (echo "Build failed" && npm run build --verbose && exit 1)

      # Start Docker Compose services
      - name: Start services with Docker Compose
        run: docker compose up db -d --wait --wait-timeout 30

      - name: Run Node.js server
        run: npm start &

      # Push database schema with drizzle-kit
      - name: Setup database schema with drizzle-kit
        run: npx drizzle-kit push

      - name: Run backend tests with Jest
        run: npm run test:api

      - name: Run Puppeteer tests
        run: npm run test:ui

      # Stop Docker Compose services
      - name: Stop Docker Compose services
        run: docker compose down